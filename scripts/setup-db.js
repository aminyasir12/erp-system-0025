#!/usr/bin/env node

const { execSync } = require('child_process');
const { Sequelize } = require('sequelize');
require('dotenv').config({ path: '.env' });

async function setupDatabase() {
  console.log('๐ ุจุฏุก ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
  
  // ูุฑุงุกุฉ ุฅุนุฏุงุฏุงุช ุงูุงุชุตุงู ูู ุงููุชุบูุฑุงุช ุงูุจูุฆูุฉ
  const dbConfig = {
    database: process.env.DB_NAME || 'pos_system',
    username: process.env.DB_USER || 'postgres',
    password: process.env.DB_PASS || 'postgres',
    host: process.env.DB_HOST || 'localhost',
    port: process.env.DB_PORT || 5432,
    dialect: 'postgres',
    logging: console.log,
  };

  try {
    // 1. ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฑุฆูุณูุฉ (postgres)
    console.log('๐ ูุญุงููุฉ ุงูุงุชุตุงู ุจุฎุงุฏู PostgreSQL...');
    const sequelize = new Sequelize({
      ...dbConfig,
      database: 'postgres', // ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช ุงูุฑุฆูุณูุฉ
    });

    // 2. ุงูุชุญูู ูู ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    console.log('๐ ุงูุชุญูู ูู ูุฌูุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    const [results] = await sequelize.query(
      `SELECT 1 FROM pg_database WHERE datname = '${dbConfig.database}'`
    );

    if (results.length === 0) {
      // 3. ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
      console.log(`๐ ุฌุงุฑู ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช '${dbConfig.database}'...`);
      await sequelize.query(`CREATE DATABASE ${dbConfig.database}`);
      console.log(`โ ุชู ุฅูุดุงุก ูุงุนุฏุฉ ุงูุจูุงูุงุช '${dbConfig.database}' ุจูุฌุงุญ`);
    } else {
      console.log(`โน๏ธ  ูุงุนุฏุฉ ุงูุจูุงูุงุช '${dbConfig.database}' ููุฌูุฏุฉ ุจุงููุนู`);
    }

    // 4. ุฅุบูุงู ุงูุงุชุตุงู
    await sequelize.close();
    
    console.log('โจ ุชู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ!');
    process.exit(0);
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุฅุนุฏุงุฏ ูุงุนุฏุฉ ุงูุจูุงูุงุช:');
    console.error(error.message);
    
    // ุนุฑุถ ุชุนูููุงุช ุงุณุชูุดุงู ุงูุฃุฎุทุงุก ูุฅุตูุงุญูุง
    console.log('\n๐ง ุงุณุชูุดุงู ุงูุฃุฎุทุงุก ูุฅุตูุงุญูุง:');
    console.log('1. ุชุฃูุฏ ูู ุชุดุบูู ุฎุงุฏู PostgreSQL');
    console.log('2. ุชุญูู ูู ุตุญุฉ ุจูุงูุงุช ุงูุงุนุชูุงุฏ ูู ููู .env');
    console.log('3. ุชุฃูุฏ ูู ุฃู ุงููุณุชุฎุฏู ูุฏูู ุตูุงุญูุงุช ุฅูุดุงุก ููุงุนุฏ ุงูุจูุงูุงุช');
    console.log('4. ุชุฃูุฏ ูู ุฃู ุงููููุฐ 5432 ููุชูุญ ููููู ุงููุตูู ุฅููู');
    
    process.exit(1);
  }
}

// ุชุดุบูู ุฏุงูุฉ ุงูุฅุนุฏุงุฏ
setupDatabase();
